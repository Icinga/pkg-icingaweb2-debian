<?php
use Icinga\Module\Monitoring\Web\Widget\StateBadges;
use Icinga\Web\Url;

// Don't fetch rows until they are actually needed, to improve dashlet performance
if (! $stats instanceof stdClass) {
    $stats = $stats->fetchRow();
}
?>
<div class="services-summary dont-print">
    <span class="services-link"><?= $this->qlink(
        sprintf($this->translatePlural(
            '%u Service', '%u Services', $stats->services_total),
            $stats->services_total
        ),
        // @TODO(el): Fix that
        Url::fromPath('monitoring/list/services')->setParams(isset($baseFilter) ? $baseFilter->getUrlParams() : array()),
        null,
        array('title' => sprintf(
            $this->translatePlural('List %u service', 'List all %u services', $stats->services_total),
            $stats->services_total
        ))
    ) ?>&#58;</span>
<?php
$stateBadges = new StateBadges();
$stateBadges
    ->setBaseFilter(isset($baseFilter) ? $baseFilter : null)
    ->setUrl('monitoring/list/services')
    ->add(
        StateBadges::STATE_OK,
        $stats->services_ok,
        array(
            'service_state' => 0
        ),
        'List %u service that is currently in state OK',
        'List %u services which are currently in state OK',
        array($stats->services_ok)
    )
    ->add(
        StateBadges::STATE_CRITICAL,
        $stats->services_critical_unhandled,
        array(
            'service_state'     => 2,
            'service_handled'   => 0
        ),
        'List %u service that is currently in state CRITICAL',
        'List %u services which are currently in state CRITICAL',
        array($stats->services_critical_unhandled)
    )
    ->add(
        StateBadges::STATE_CRITICAL_HANDLED,
        $stats->services_critical_handled,
        array(
            'service_state'     => 2,
            'service_handled'   => 1
        ),
        'List %u handled service that is currently in state CRITICAL',
        'List %u handled services which are currently in state CRITICAL',
        array($stats->services_critical_unhandled)
    )
    ->add(
        StateBadges::STATE_UNKNOWN,
        $stats->services_unknown_unhandled,
        array(
            'service_state'     => 3,
            'service_handled'   => 0
        ),
        'List %u service that is currently in state UNKNOWN',
        'List %u services which are currently in state UNKNOWN',
        array($stats->services_unknown_unhandled)
    )
    ->add(
        StateBadges::STATE_UNKNOWN_HANDLED,
        $stats->services_unknown_handled,
        array(
            'service_state'     => 3,
            'service_handled'   => 1
        ),
        'List %u handled service that is currently in state UNKNOWN',
        'List %u handled services which are currently in state UNKNOWN',
        array($stats->services_unknown_handled)

    )
    ->add(
        StateBadges::STATE_WARNING,
        $stats->services_warning_unhandled,
        array(
            'service_state'     => 1,
            'service_handled'   => 0
        ),
        'List %u service that is currently in state WARNING',
        'List %u services which are currently in state WARNING',
        array($stats->services_warning_unhandled)
    )
    ->add(
        StateBadges::STATE_WARNING_HANDLED,
        $stats->services_warning_handled,
        array(
            'service_state'     => 1,
            'service_handled'   => 1
        ),
        'List %u handled service that is currently in state WARNING',
        'List %u handled services which are currently in state WARNING',
        array($stats->services_warning_handled)
    )
    ->add(
        StateBadges::STATE_PENDING,
        $stats->services_pending,
        array(
            'service_state' => 99
        ),
        'List %u handled service that is currently in state PENDING',
        'List %u handled services which are currently in state PENDING',
        array($stats->services_pending)
    );
echo $stateBadges->render();
?>
</div>
